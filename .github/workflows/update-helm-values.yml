name: Update Helm Values

on:
  repository_dispatch:
    types: [helm-values-update]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-values:
    name: Update Helm Values
    runs-on: ubuntu-latest
    environment: retail-shop
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod a+x /usr/local/bin/yq

      - name: Determine image tag
        id: image-tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # For manual runs, use latest
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            # For automated runs, use commit SHA
            echo "tag=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
          fi

      - name: Update all Helm values
        run: |
          IMAGE_TAG="${{ steps.image-tag.outputs.tag }}"
          SERVICES=("cart" "catalog" "checkout" "orders" "ui")
          
          echo "Updating all services with image tag: $IMAGE_TAG"
          
          for SERVICE in "${SERVICES[@]}"; do
            echo "Processing service: $SERVICE"
            
            ECR_REPO="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/retail-store-sample-$SERVICE"
            
            echo "ECR Repository: $ECR_REPO"
            
            # Update the values.yaml file using yq
            yq eval ".image.repository = \"$ECR_REPO\"" -i src/$SERVICE/chart/values.yaml
            yq eval ".image.tag = \"$IMAGE_TAG\"" -i src/$SERVICE/chart/values.yaml
            
            echo "Updated $SERVICE values.yaml"
            
            # Show the changes for this service
            echo "Changes for $SERVICE:"
            git diff src/$SERVICE/chart/values.yaml || echo "No changes for $SERVICE"
            echo "---"
          done

      - name: Commit and push all changes
        run: |
          IMAGE_TAG="${{ steps.image-tag.outputs.tag }}"
          
          # Configure git
          git config --global user.email "ci@example.com"
          git config --global user.name "CI Bot"
          
          # Check if there are any changes to commit
          if git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          # Add all changed values.yaml files
          git add src/*/chart/values.yaml
          
          # Create commit message with all updated services
          COMMIT_MSG="Update all service images to $IMAGE_TAG"
          
          # Commit changes
          git commit -m "$COMMIT_MSG"
          
          # Push changes
          git push origin main
          
          echo "Successfully updated all service images to $IMAGE_TAG" 