name: Update Helm Values

on:
  repository_dispatch:
    types: [helm-values-update]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-values:
    name: Update Helm Values
    runs-on: ubuntu-latest
    environment: retail-shop
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod a+x /usr/local/bin/yq

      - name: Generate industry-standard tag
        id: tag
        run: |
          # Industry-standard tagging strategy with dynamic versioning
          GIT_COMMIT=$(git rev-parse --short HEAD)
          GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          
          # Dynamic semantic versioning
          if git describe --tags --exact-match 2>/dev/null; then
            VERSION=$(git describe --tags --exact-match | sed 's/^v//')
          else
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            COMMITS_SINCE=$(git rev-list --count ${LATEST_TAG}..HEAD 2>/dev/null || echo "0")
            BASE_VERSION=$(echo $LATEST_TAG | sed 's/^v//')
            
            if [ "$COMMITS_SINCE" -gt 0 ]; then
              IFS='.' read -r major minor patch <<< "$BASE_VERSION"
              patch=$((patch + 1))
              VERSION="${major}.${minor}.${patch}-${COMMITS_SINCE}.${GIT_COMMIT}"
            else
              VERSION="$BASE_VERSION"
            fi
          fi
          
          # Use combined tag for production deployments (recommended)
          COMBINED_TAG="${GIT_BRANCH}-${GIT_COMMIT}"
          
          echo "git-commit=${GIT_COMMIT}" >> $GITHUB_OUTPUT
          echo "git-branch=${GIT_BRANCH}" >> $GITHUB_OUTPUT
          echo "combined-tag=${COMBINED_TAG}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "build-date=${BUILD_DATE}" >> $GITHUB_OUTPUT
          
          echo "üìã Generated Tag Information:"
          echo "  Git Commit: ${GIT_COMMIT}"
          echo "  Git Branch: ${GIT_BRANCH}"
          echo "  Combined Tag: ${COMBINED_TAG}"
          echo "  Version: ${VERSION}"
          echo "  Build Date: ${BUILD_DATE}"

      - name: Update all Helm values with industry-standard tags
        run: |
          COMBINED_TAG="${{ steps.tag.outputs.combined-tag }}"
          SERVICES=("cart" "catalog" "checkout" "orders" "ui")
          
          echo "üè∑Ô∏è  Updating all services with industry-standard tag: ${COMBINED_TAG}"
          
          for SERVICE in "${SERVICES[@]}"; do
            echo "Processing service: ${SERVICE}"
            
            ECR_REPO="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/retail-store-sample-${SERVICE}"
            
            echo "  Repository: ${ECR_REPO}"
            echo "  Tag: ${COMBINED_TAG}"
            
            # Update the values.yaml file using yq with industry-standard combined tag
            yq eval ".image.repository = \"${ECR_REPO}\"" -i src/${SERVICE}/chart/values.yaml
            yq eval ".image.tag = \"${COMBINED_TAG}\"" -i src/${SERVICE}/chart/values.yaml
            
            echo "  ‚úÖ Updated ${SERVICE} values.yaml"
            
            # Show the changes for this service
            echo "  üìù Changes for ${SERVICE}:"
            git diff src/${SERVICE}/chart/values.yaml || echo "  No changes for ${SERVICE}"
            echo "  ---"
          done

      - name: Commit and push all changes
        run: |
          COMBINED_TAG="${{ steps.tag.outputs.combined-tag }}"
          
          # Configure git
          git config --global user.email "ci@retail-store-sample-app.com"
          git config --global user.name "Industry-Standard CI Bot"
          
          # Check if there are any changes to commit
          if git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          # Add all changed values.yaml files
          git add src/*/chart/values.yaml
          
          # Create commit message with industry-standard information
          COMMIT_MSG="chore: update all service images to ${COMBINED_TAG}
          
          Industry-standard container tagging applied:
          - Version: v${{ steps.tag.outputs.version }}
          - Combined tag: ${COMBINED_TAG}
          - Git Commit: ${{ steps.tag.outputs.git-commit }}
          - Git Branch: ${{ steps.tag.outputs.git-branch }}
          - Build Date: ${{ steps.tag.outputs.build-date }}
          - Production Ready: Immutable reference for ArgoCD"
          
          # Commit changes
          git commit -m "${COMMIT_MSG}"
          
          # Push changes
          git push origin main
          
          echo "‚úÖ Successfully updated all service images to industry-standard tag: ${COMBINED_TAG}" 