name: Build and Push Images

on:
  push:
    branches: [ gitops ]
    paths:
      - 'src/**'
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changes.outputs.matrix }}
      services: ${{ steps.changes.outputs.services }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect changed services
        id: changes
        run: |
          SERVICES=("ui" "catalog" "cart" "checkout" "orders")
          CHANGED_SERVICES=()
          
          # Check for changes in each service
          for service in "${SERVICES[@]}"; do
            if git diff --name-only HEAD~1 HEAD | grep -q "^src/$service/"; then
              CHANGED_SERVICES+=("$service")
              echo "✅ Changes detected in $service"
            fi
          done
          
          # If no changes or manual trigger, build all
          if [ ${#CHANGED_SERVICES[@]} -eq 0 ] || [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Building all services"
            CHANGED_SERVICES=("${SERVICES[@]}")
          fi
          
          # Create matrix - fix JSON format
          SERVICES_JSON="["
          for i in "${!CHANGED_SERVICES[@]}"; do
            if [ $i -gt 0 ]; then
              SERVICES_JSON+=","
            fi
            SERVICES_JSON+="\"${CHANGED_SERVICES[$i]}\""
          done
          SERVICES_JSON+="]"
          
          MATRIX="{\"service\":$SERVICES_JSON}"
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
          echo "services=${CHANGED_SERVICES[*]}" >> $GITHUB_OUTPUT
          echo "Generated matrix: $MATRIX"

  build-push:
    runs-on: ubuntu-latest
    needs: detect-changes
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create ECR repo if needed
        run: |
          REPO="retail-store-${{ matrix.service }}"
          aws ecr describe-repositories --repository-names $REPO 2>/dev/null || \
          aws ecr create-repository --repository-name $REPO \
            --image-scanning-configuration scanOnPush=true

      - name: Generate tag
        id: tag
        run: |
          TAG="$(echo ${{ github.sha }} | cut -c1-7)-$(date +%Y%m%d%H%M%S)"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./src/${{ matrix.service }}
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/retail-store-${{ matrix.service }}:${{ steps.tag.outputs.tag }}
            ${{ steps.login-ecr.outputs.registry }}/retail-store-${{ matrix.service }}:latest

      - name: Output image info
        run: |
          echo "SERVICE=${{ matrix.service }}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ steps.tag.outputs.tag }}" >> $GITHUB_ENV
          echo "IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/retail-store-${{ matrix.service }}:${{ steps.tag.outputs.tag }}" >> $GITHUB_ENV

  trigger-helm-update:
    name: Trigger Helm Charts Update
    runs-on: ubuntu-latest
    needs: [detect-changes, build-push]
    if: success()
    permissions:
      actions: write
      contents: read
    steps:
      - name: Trigger Update Helm Workflow
        run: |
          echo "🚀 Triggering Helm update for services: ${{ needs.detect-changes.outputs.services }}"
          
          # Trigger the update-helm workflow via GitHub API
          HTTP_STATUS=$(curl -w "%{http_code}" -s -o /tmp/response.json \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/update-helm.yml/dispatches \
            -d '{
              "ref": "gitops",
              "inputs": {
                "service": "all",
                "trigger_source": "build-completed",
                "build_commit": "${{ github.sha }}",
                "changed_services": "${{ needs.detect-changes.outputs.services }}"
              }
            }')
          
          echo "API Response Status: $HTTP_STATUS"
          
          if [ "$HTTP_STATUS" -eq 204 ]; then
            echo "✅ Successfully triggered Helm update workflow"
            echo "🔗 Monitor progress: https://github.com/${{ github.repository }}/actions/workflows/update-helm.yml"
          else
            echo "❌ Failed to trigger Helm update workflow"
            echo "Response:"
            cat /tmp/response.json
            exit 1
          fi

      - name: Build Summary
        run: |
          echo "## 🚀 Build and Push Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Services Built:** ${{ needs.detect-changes.outputs.services }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** gitops" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next Steps:**" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Images pushed to ECR successfully" >> $GITHUB_STEP_SUMMARY
          echo "- 🔄 Helm update workflow triggered automatically" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 Monitor Helm updates in Actions tab" >> $GITHUB_STEP_SUMMARY
          echo "- 🎯 ArgoCD will sync updated charts automatically" >> $GITHUB_STEP_SUMMARY
