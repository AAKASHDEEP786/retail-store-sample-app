name: Semantic Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    environment: retail-shop
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic.outputs.new-release-version }}
      new-release-git-tag: ${{ steps.semantic.outputs.new-release-git-tag }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install semantic-release
        run: |
          npm install -g semantic-release @semantic-release/git @semantic-release/github @semantic-release/changelog

      - name: Configure semantic-release
        run: |
          cat > .releaserc.json << EOF
          {
            "branches": ["main"],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/changelog",
              [
                "@semantic-release/git",
                {
                  "assets": ["CHANGELOG.md"],
                  "message": "chore(release): \${nextRelease.version} [skip ci]\n\n\${nextRelease.notes}"
                }
              ],
              "@semantic-release/github"
            ]
          }
          EOF

      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release --debug

      - name: Create release summary
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |
          echo "## 🚀 New Release Created" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ steps.semantic.outputs.new-release-version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Git Tag**: ${{ steps.semantic.outputs.new-release-git-tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${GITHUB_SHA:0:7}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${GITHUB_REF_NAME}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. 🏗️ Docker images will be built with this version" >> $GITHUB_STEP_SUMMARY
          echo "2. 📦 Images will be pushed to ECR" >> $GITHUB_STEP_SUMMARY
          echo "3. 📝 Helm values will be updated" >> $GITHUB_STEP_SUMMARY
          echo "4. 🚀 ArgoCD will deploy the new version" >> $GITHUB_STEP_SUMMARY

  trigger-build:
    name: Trigger Build Pipeline
    runs-on: ubuntu-latest
    needs: semantic-release
    if: always() # Always run build, whether there's a new release or not
    steps:
      - name: Trigger ECR Build Workflow
        run: |
          echo "🔄 Triggering ECR build workflow..."
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/private-ecr-build.yaml/dispatches" \
            -d '{"ref":"main"}'
          
          echo "✅ ECR build workflow triggered successfully" 