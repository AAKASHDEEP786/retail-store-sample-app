name: "PR Checks (Simplified)"

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - edited
      - synchronize

permissions:
  pull-requests: read

jobs:
  semanticpr:
    name: "Semantic Pull Request"
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: "Lint Check"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Check YAML syntax
        run: |
          # Check all YAML files for syntax errors
          find . -name "*.yaml" -o -name "*.yml" | while read file; do
            echo "Checking $file"
            python3 -c "import yaml; yaml.safe_load(open('$file'))" || exit 1
          done

      - name: Check Helm charts
        run: |
          # Validate Helm charts
          find . -name "Chart.yaml" -exec dirname {} \; | while read chart_dir; do
            echo "Validating chart: $chart_dir"
            helm lint "$chart_dir" || exit 1
          done

  build-test:
    name: "Build Test"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test Docker builds
        run: |
          # Test building all Docker images
          docker build --target build --no-cache src/cart/ || exit 1
          docker build --target build --no-cache src/catalog/ || exit 1
          docker build --target build --no-cache src/checkout/ || exit 1
          docker build --target build --no-cache src/orders/ || exit 1
          docker build --target build --no-cache src/ui/ || exit 1

  security-scan:
    name: "Security Scan"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif' 